service: s3-object-lambda-image-resize
frameworkVersion: "2"

custom:
  bucketName: 'BUCKET'

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: us-east-1

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3-object-lambda:WriteGetObjectResponse
          Resource: "*"
        - Effect: Allow
          Action:
            - s3:PutObject
          Resource:
            - !GetAtt bucket.Arn
            - !Join ["/", [{ Fn::GetAtt: [bucket, Arn] }, "*"]]

functions:
  resizer:
    handler: handler.resizer
    environment:
      BUCKET_NAME: ${self:custom.bucketName}

resources:
  Resources:
    bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}

    bucketAccessPoint:
      Type: AWS::S3::AccessPoint
      Properties:
        Bucket: !Ref bucket
        Name: ${self:service}-${self:provider.stage}-ap

    lambdaAccessPoint:
      Type: AWS::S3ObjectLambda::AccessPoint
      Properties:
        Name: ${self:service}-${self:provider.stage}-lambda-ap
        ObjectLambdaConfiguration:
          CloudWatchMetricsEnabled: true
          SupportingAccessPoint: !Sub arn:aws:s3:${AWS::Region}:${AWS::AccountId}:accesspoint/${self:service}-${self:provider.stage}-ap

          TransformationConfigurations:
            - Actions: ["GetObject"]
              ContentTransformation:
                AwsLambda:
                  FunctionArn: !GetAtt ResizerLambdaFunction.Arn

  Outputs:
    BucketName:
      Description: Bucket name
      Value: !Ref bucket
